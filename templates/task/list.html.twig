{% extends 'base.html.twig' %}

{% block header_img %}<img class="slide-image" src="{{ asset('img/todolist_content.jpg') }}" alt="todo list">{% endblock %}
{% block stylesheets %}
<style>
	.card {
		width: fit-content;
		padding: 1% 2%;
	}
	.card-links {
		display: flex;
		justify-content: space-between;
		gap: 5px;
	}
	.finished {
		background-color: lightgray;
	}
	.ano {
		background-color: darksalmon;
	}
</style>
{% endblock %}

{% block body %}
	<a href="{{ path('task_create') }}" class="btn btn-info pull-right">Create task</a>
	<div class="row">
		{% for task in tasks %}
		<div class="col-sm-4 col-lg-4 col-md-4 card {{ ((task.author.email == "ano@test.com") ? "ano" : "") }}" id="task_{{ task.id }}">
			<div class="thumbnail">
				<h4 class="card-title"><a href="{{ path('task_edit', {'id' : task.id }) }}">{{ task.title }}</a></h4>
				<p class="card-text">{{ task.content }}</p>
				{% if is_granted('ROLE_ADMIN') %}
					<small>{{ task.author.email }}</small>
				{% endif %}
				<div class="card-links">
					<a href="{{ path('task_edit', {'id': task.id }) }}" class="btn btn-warning btn-sm">Edit</a>
					<button class="btn btn-success btn-sm pull-right btn-toggle" data-id="{{ task.id }}">
						{% if not task.isDone %}Mark as done{% else %}Mark as unfinished{% endif %}
					</button>
					<button class="btn btn-danger btn-sm pull-right btn-delete-task" data-task-id="{{ task.id }}" data-crsf="{{ csrf_token('delete' ~ task.id) }}">Delete</button>
				</div>
			</div>
		</div>
		{% else %}
			<div class="alert alert-warning" role="alert">
				There is no task registered yet. <a href="{{ path('task_create') }}" class="btn btn-warning pull-right">Create a task</a>
			</div>
		{% endfor %}
	</div>
	<script>
		window.addEventListener("DOMContentLoaded", () => {
			document.querySelectorAll(".btn-toggle").forEach(btn => {
				btn.addEventListener("click", btnClicked => {
					setWaiting(true);
					let btnId = btnClicked.target.getAttribute("data-id");
					fetch(btnId + "/toggle", {
						method: "POST",
						headers: {
							'Content-Type': 'application/json'
						},
					}).then(res => {
						return res.json()
					}).then(data => {
						btnClicked.target.textContent = (data.newState ? "Mark as unfinished" : "Mark as done");
						btnClicked.target.classList.remove((data.newState ? "btn-success" : "btn-secondary"));
						btnClicked.target.classList.add((data.newState ? "btn-secondary" : "btn-success"));
						//If task is undone, remove the finished class.
						(data.newState ? document.getElementById("task_" + btnId).classList.add("finished") : document.getElementById("task_" + btnId).classList.remove("finished"));
						setWaiting(false);
					})
				})
			})
			document.querySelectorAll(".btn-delete-task").forEach(btn => {
				btn.addEventListener("click", btnClicked => {
					if (confirm("Are you sure to delete this taks ?")) {
						const taskId = btnClicked.target.getAttribute("data-task-id");
						const crsfToken = btnClicked.target.getAttribute("data-crsf");
						fetch(taskId, {
							method: "DELETE",
							headers: {
								'Content-Type': 'application/json'
							},
							body: JSON.stringify({
								_token: crsfToken
							})
						}).then(res => {
							return res.json()
						}).then(data => {
							console.log(data);
							if (data.success) {
								document.getElementById("task_" + taskId).remove();
							}
						})
					}
				})
			})
		})

	</script>
{% endblock %}
